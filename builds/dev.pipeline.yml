trigger:
- develop
- features/*

variables:
- group: dev-build
- group: packages

pool:
  name: Hosted Windows 2019 with VS2019
  demands: java

jobs:
- job: main_build
  displayName: 'Test application'
  steps:
  - template: './templates/version.variables.yml'
  - template: './templates/update.version.yml'
  - template: './templates/sonarcloud.start.yml'

  - task: PowerShell@2
    displayName: 'Update appsettings.json file'
    inputs:
      targetType: filePath
      filePath: $(paths.script)/appsettings.ps1
      arguments: '-updatePackage $(package.win10-x64) -rollbarKey $(rollbar.key) -version $(GitVersion.SemVer)'

  - task: DotNetCoreCLI@2
    displayName: 'Build web app'
    inputs:
      projects: '$(webapp.project)'
      arguments: '--output publish'

  - template: ./templates/unit.tests.yml
  - template: './templates/sonarcloud.end.yml'

  - task: WhiteSource Bolt@20
    condition: eq(variables['Build.SourceBranchName'], 'develop')
    displayName: 'Scan for open libraries'
    inputs:
      cwd: '$(Build.SourcesDirectory)'

- job:  build_win10_x64
  dependsOn:  main_build
  displayName: 'Build Win10-x64 package'
  condition: succeeded()
  pool:
    name: Hosted Windows 2019 with VS2019
  variables:
    GitVersion.AssemblySemVer: $[ dependencies.main_build.outputs['setAssemblySemVer.AssemblySemVer'] ]
    GitVersion.SemVer: $[ dependencies.main_build.outputs['setSemVer.SemVer'] ]
  steps:
  - template: './templates/update.version.yml'

  - task: PowerShell@2
    displayName: 'Update appsettings.json file'
    inputs:
      targetType: filePath
      filePath: $(paths.script)/appsettings.ps1
      arguments: '-updatePackage $(package.win10-x64) -rollbarKey $(rollbar.key) -version $(GitVersion.SemVer)'

  - task: DotNetCoreCLI@2
    displayName: 'Make dotnet win10-x64 package'
    inputs:
      command: publish
      publishWebProjects: false
      projects: '$(webapp.project)'
      arguments: '-c Release -r win-x64 -o publish -f $(publish.framework) --self-contained true $(publish.parameters)'
      zipAfterPublish: false
      modifyOutputPath: false

  - task: DotNetCoreCLI@2
    displayName: 'Make dotnet win10-x64 updater package'
    inputs:
      command: publish
      publishWebProjects: false
      projects: '$(updater.project)'
      arguments: '-c Release -r win-x64 -o publish/updater -f $(publish.framework) --self-contained true $(publish.parameters)'
      zipAfterPublish: false
      modifyOutputPath: false

  - task: CmdLine@2
    inputs:
      script: |
        dir
        cd publish
        dir

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Windows Artifact'
    inputs:
      PathtoPublish: 'publish'
      ArtifactName: 'EmbyStat-$(package.win10-x64)-v$(GitVersion.SemVer)'

- job:  build_ubuntu_x64
  dependsOn:  main_build
  displayName: 'Build Ubuntu-x64 package'
  condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'develop'))
  pool:
    name: Hosted Windows 2019 with VS2019
  variables:
    GitVersion.AssemblySemVer: $[ dependencies.main_build.outputs['setAssemblySemVer.AssemblySemVer'] ]
    GitVersion.SemVer: $[ dependencies.main_build.outputs['setSemVer.SemVer'] ]
  steps:
  - template: './templates/update.version.yml'

  - task: Bash@3
    displayName: 'Update appsettings.json file'
    inputs:
      targetType: filePath
      filePath: $(Paths.Script)/appsettings.sh
      arguments: '$(package.ubuntu-x64) $(rollbar.key) $(GitVersion.SemVer)'

  - task: DotNetCoreCLI@2
    displayName: 'Make dotnet ubuntu-x64 package'
    inputs:
      command: publish
      publishWebProjects: false
      projects: '$(webapp.project)'
      arguments: '-c Release -r ubuntu-x64 -o publish -f $(publish.framework) --self-contained true $(publish.parameters)'
      zipAfterPublish: false
      modifyOutputPath: false

  - task: DotNetCoreCLI@2
    displayName: 'Make dotnet ubuntu-x64 updater package'
    inputs:
      command: publish
      publishWebProjects: false
      projects: '$(updater.project)'
      arguments: '-c Release -r ubuntu-x64 -o publish/updater -f $(publish.framework) --self-contained true $(publish.parameters)'
      zipAfterPublish: false
      modifyOutputPath: false

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Ubuntu Artifact'
    inputs:
      PathtoPublish: '$(webapp.path.ubuntu-x64)'
      ArtifactName: 'EmbyStat-$(package.ubuntu-x64)-v$(GitVersion.SemVer)'

- job:  create_docker_files
  dependsOn:
  - build_win10_x64
  - build_ubuntu_x64
  - main_build
  displayName: 'Create Docker files'
  condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'develop'))
  pool:
    name: Hosted Windows 2019 with VS2019
  steps:
  - task: PowerShell@2
    displayName: 'Copy Docker files'
    inputs:
      targetType: filePath
      filePath: $(paths.script)/dockerfiles.ps1

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Docker files'
    inputs:
      PathtoPublish: publish
      ArtifactName: 'EmbyStat-dockerfiles'

